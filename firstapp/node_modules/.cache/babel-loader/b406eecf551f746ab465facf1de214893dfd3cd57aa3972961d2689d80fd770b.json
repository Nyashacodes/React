{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akanksha\\\\Desktop\\\\NYASHA_SYSTEM\\\\React-test\\\\firstapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\n// import Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); //weather dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  //  const CustomMode=(mode = 'black')=>{\n  //   switch()\n  //  }\n  // const backgroundRemove=()=>{\n  //   document.body.backgroundColor.remove('bg-light')\n  //   document.body.backgroundColor.remove('bg-dark')\n  //   document.body.backgroundColor.remove('bg-primary')\n  //   document.body.backgroundColor.remove('bg-yellow')\n  //   document.body.backgroundColor.remove('bg-success')\n\n  // }\n\n  const toggleMode = cls => {\n    console.log(cls);\n    // document.body.classList.add('bg-'+cls)\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#113e7e';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils-Dark mode enabled!';\n\n      // setInterval(()=>{\n      //   document.title='TextUtils is great!'\n      // },2000)\n\n      // setInterval(()=>{\n      //   document.title='Download Now!'\n      // },1500)\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils-Dark mode enabled!';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/textform\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter a text to Analyzer\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","TextForm","BrowserRouter","Router","Switch","Routes","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","cls","console","log","document","body","style","backgroundColor","title","children","exact","path","element","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["C:/Users/Akanksha/Desktop/NYASHA_SYSTEM/React-test/firstapp/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\n// import Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n    \n  const[mode, setMode] = useState('light'); //weather dark mode is enabled or not\n  const[alert, setAlert] = useState(null);\n\n\n  const showAlert=(message, type)=>{\n\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },3000)\n  }\n  \n//  const CustomMode=(mode = 'black')=>{\n//   switch()\n//  }\n  // const backgroundRemove=()=>{\n  //   document.body.backgroundColor.remove('bg-light')\n  //   document.body.backgroundColor.remove('bg-dark')\n  //   document.body.backgroundColor.remove('bg-primary')\n  //   document.body.backgroundColor.remove('bg-yellow')\n  //   document.body.backgroundColor.remove('bg-success')\n\n  // }\n  \n    const toggleMode=(cls)=>{\n    console.log(cls)\n    // document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#113e7e'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title='TextUtils-Dark mode enabled!'\n\n      // setInterval(()=>{\n      //   document.title='TextUtils is great!'\n      // },2000)\n\n      // setInterval(()=>{\n      //   document.title='Download Now!'\n      // },1500)\n\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title='TextUtils-Dark mode enabled!'\n\n    }\n  }\n  return (\n    <>\n    <Router>\n      <Routes>\n        <Route exact path=\"/about\" element={<About />} />\n        <Route exact path=\"/textform\" element={<TextForm heading = \"Enter a text to Analyzer\" mode={mode} showAlert={showAlert}/>} />\n      </Routes>\n    </Router>\n    \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}